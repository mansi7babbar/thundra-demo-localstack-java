# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          touch ~/.aws/credentials

          echo "[default]
          aws_access_key_id = test
          aws_secret_access_key = test
          region = us-east-1" > ~/.aws/credentials
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Update apt
        run: sudo apt update
      - name: Install Python
        run: sudo apt install python3
      - name: Install pip
        run: sudo apt install python3-pip
      - name: Install npm
        run: sudo apt install npm
      - name: Install make
        run: sudo apt install make
      - name: Install docker
        run: |
          sudo apt install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
          sudo apt update
          apt-cache policy docker-ce
          sudo apt install docker-ce
      - name: Install dependencies
        run: sudo make install
      - name: Run tests
        run: make test
      - name: Thundra Maven Test Instrumentation
        uses: thundra-io/thundra-maven-test-action@v1
        with:
          apikey: 8ae270b5-30c4-4daf-8211-4987e7c31de1
          project_id: 33f46f6a-eda6-4a01-a107-cadc95b35ff3
          command: mvn clean install
